#!/usr/bin/env bash
[[ " ps ps:start ps:stop ps:rebuild ps:rebuildall ps:restart ps:restartall ps:restore ps:scale help ps:help " == *" $1 "* ]] || exit $DOKKU_NOT_IMPLEMENTED_EXIT

case "$1" in
  ps)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/default" "$@"
    ;;

  ps:start)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/start" "$@"
    ;;

  ps:stop)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/stop" "$@"
    ;;

  ps:rebuild)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/rebuild" "$@"
    ;;

  ps:rebuildall)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/rebuildall" "$@"
    ;;

  ps:restart)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/restart" "$@"
    ;;

  ps:restartall)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/restartall" "$@"
    ;;

  ps:restore)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/restore" "$@"
  ;;

  ps:scale)
    "$PLUGIN_AVAILABLE_PATH/ps/subcommands/scale" "$@"
    ;;

  help | ps:help)
    cat<<EOF
    ps <app>, List processes running in app container(s)
    ps:scale [<app> <proc>=<count> [<proc>=<count>]], Get/Set how many instances of a given process to run
    ps:start <app>, Start app container(s)
    ps:stop <app>, Stop app container(s)
    ps:rebuild <app>, Rebuild an app
    ps:rebuildall, Rebuild all apps
    ps:restart <app>, Restart app container(s)
    ps:restartall, Restart all deployed app containers
    ps:restore, Start previously running apps e.g. after reboot
EOF
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;

esac
