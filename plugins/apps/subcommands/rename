#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

main() {
  declare cmd="apps:rename"
  local argv=("$@")
  [[ ${argv[0]} == "$cmd" ]] && shift 1
  [[ ! -z $DOKKU_APP_NAME ]] && set -- $DOKKU_APP_NAME $@
  set -- $cmd $@

  local APP="$2"; verify_app_name "$APP"
  [[ -d "$DOKKU_ROOT/$3" ]] && dokku_log_fail "Name is already taken"
  OLD_APP="$2"
  NEW_APP="$3"

  mkdir -p "$DOKKU_ROOT/$NEW_APP"
  docker run $DOKKU_GLOBAL_RUN_ARGS --rm -v "$DOKKU_ROOT/$OLD_APP/cache:/cache" "dokku/$OLD_APP" chmod 777 -R /cache
  rm -rf "$DOKKU_ROOT/$OLD_APP/cache"
  cp -a "$DOKKU_ROOT/$OLD_APP/." "$DOKKU_ROOT/$NEW_APP"
  dokku apps:destroy $OLD_APP --force
  sed -i -e "s/$OLD_APP/$NEW_APP/g" "$DOKKU_ROOT/$NEW_APP/URLS"
  sed -i -e "s/$OLD_APP/$NEW_APP/g" "$DOKKU_ROOT/$NEW_APP/VHOST"
  sed -i -e "s/git-hook $OLD_APP/git-hook $NEW_APP/g" "$DOKKU_ROOT/$NEW_APP/hooks/pre-receive"
  dokku ps:rebuild $NEW_APP
  plugn trigger post-app-rename $OLD_APP $NEW_APP
  echo "Renaming $OLD_APP to $NEW_APP... done"
}

main "$@"
