set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_CORE_AVAILABLE_PATH/proxy/functions"

get_app_urls() {
  local APP="$2"; verify_app_name "$APP"

  if [[ -s "$DOKKU_ROOT/$APP/URLS" ]]; then
    case "$1" in
      url)
        grep "^http" "$DOKKU_ROOT/$APP/URLS" | head -1
      ;;
      urls)
        grep "^http" "$DOKKU_ROOT/$APP/URLS"
      ;;
    esac
  else
    local SCHEME="http"; local SSL="$DOKKU_ROOT/$APP/tls"
    local DOKKU_NGINX_PORT=$(config_get $APP DOKKU_NGINX_PORT || true)
    local DOKKU_NGINX_SSL_PORT=$(config_get $APP DOKKU_NGINX_SSL_PORT || true)

    if [[ -e "$SSL/server.crt" && -e "$SSL/server.key" ]]; then
      local SCHEME="https"
    fi

    if [[ "$(is_app_proxy_enabled $APP)" == "false" ]]; then
      shopt -s nullglob
      for PORT_FILE in $DOKKU_ROOT/$APP/PORT.*; do
        echo "$SCHEME://$(< "$DOKKU_ROOT/HOSTNAME"):$(< "$PORT_FILE") (container)"
      done
      shopt -u nullglob
    elif [[ -n "$DOKKU_NGINX_PORT" ]] || [[ -n "$DOKKU_NGINX_SSL_PORT" ]]; then
      if [[ -n "$DOKKU_NGINX_PORT" ]];then
        echo "http://$(< "$DOKKU_ROOT/HOSTNAME"):$DOKKU_NGINX_PORT ($(get_app_proxy_type $APP))"
      fi
      if [[ -n "$DOKKU_NGINX_SSL_PORT" ]]; then
        echo "https://$(< "$DOKKU_ROOT/HOSTNAME"):$DOKKU_NGINX_SSL_PORT ($(get_app_proxy_type $APP)-ssl)"
      fi
    else
      echo "$SCHEME://$(< "$DOKKU_ROOT/VHOST")"
    fi
  fi
}
