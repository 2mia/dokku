#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"

main() {
  declare cmd="backup:import"
  local argv=("$@")
  [[ ${argv[0]} == "$cmd" ]] && shift 1
  set -- $cmd $@

  if [[ $2 == "-f" ]]; then
    force=true
    shift
  else
    force=false
  fi

  INPUT_FILE="$2"
  [[ -z $INPUT_FILE ]] && INPUT_FILE="-"

  BACKUP_TMP_DIR=$(mktemp -d)

  tar xf $INPUT_FILE --directory=$BACKUP_TMP_DIR

  if [[ ! -f $BACKUP_TMP_DIR/.dokku_backup_version ]]; then
    dokku_log_fail "Unable to determine backup version"
  fi

  VERSION=$(< $BACKUP_TMP_DIR/.dokku_backup_version)
  if [[ $VERSION -ne 1 ]]; then
    dokku_log_fail "Unknown format version $VERSION"
  fi

  echo "Importing a version $VERSION backup..."

  BACKUP_ROOT="$BACKUP_TMP_DIR""$DOKKU_ROOT"
  TARGET_DIR="$DOKKU_ROOT"

  if ! plugn trigger backup-check $VERSION "$BACKUP_ROOT" "$TARGET_DIR" "$BACKUP_TMP_DIR/.dokku_backup_apps"; then
    if $force; then
      echo "-f used. Ignoring warnings."
    else
      dokku_log_fail "Archive did not pass sanity checks. Use -f to import anyway"
    fi
  fi

  # create all the app directories
  while read -r app; do mkdir "$TARGET_DIR/$app"; echo "Imported $app"; done < $BACKUP_TMP_DIR/.dokku_backup_apps

  # have the plugins import their stuff
  plugn trigger backup-import $VERSION "$BACKUP_ROOT" $TARGET_DIR "$BACKUP_TMP_DIR/.dokku_backup_apps"

  rm -rf $BACKUP_TMP_DIR

  echo "Import complete."
}

main "$@"
