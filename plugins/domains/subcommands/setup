#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x
source "$PLUGIN_CORE_AVAILABLE_PATH/common/functions"
source "$PLUGIN_AVAILABLE_PATH/nginx-vhosts/functions"

main() {
  declare cmd="domains:setup"
  local argv=("$@")
  [[ ${argv[0]} == "$cmd" ]] && shift 1
  [[ ! -z $DOKKU_APP_NAME ]] && set -- $DOKKU_APP_NAME $@
  set -- $cmd $@

  local APP="$2"; verify_app_name "$APP"
  local APP="$2";
  local VHOST_PATH="$DOKKU_ROOT/$APP/VHOST";
  local VHOST=""
  local RE_IPV4="$(get_ipv4_regex)";
  local RE_IPV6="$(get_ipv6_regex)"

  if [[ ! -f $VHOST_PATH ]]; then
    if [[ -f "$DOKKU_ROOT/VHOST" ]]; then
      VHOST=$(< "$DOKKU_ROOT/VHOST")
    else
      VHOST=$(< "$DOKKU_ROOT/HOSTNAME")
    fi
    if [[ "$VHOST" =~ $RE_IPV4 ]] || [[ "$VHOST" =~ $RE_IPV6 ]]; then
      dokku_log_info2 "unsupported vhost config found. disabling vhost support"
      disable_app_vhost $APP --no-restart $APP
    else
      if [[ -f "$DOKKU_ROOT/VHOST" ]]; then
        dokku_log_info1 "Creating new $VHOST_PATH..."
        SUBDOMAIN=${APP/%\.${VHOST}/}
        hostname=$(: | plugn trigger nginx-hostname $APP $SUBDOMAIN $VHOST)
        if [[ ! -n $hostname ]]; then
          if [[ "$APP" == *.* ]] && [[ "$SUBDOMAIN" == "$APP" ]]; then
            hostname="${APP/\//-}"
          else
            hostname="${APP/\//-}.$VHOST"
          fi
        fi

        echo "$hostname" > $VHOST_PATH
      fi
    fi
  fi
}

main "$@"
